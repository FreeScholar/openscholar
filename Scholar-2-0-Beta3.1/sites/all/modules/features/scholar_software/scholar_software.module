<?php

include_once('scholar_software.features.inc');

function scholar_software_menu(){
  $items = array();
  $items['rbuild'] = array(
    'title' => 'rbuild',
    'page callback' => 'scholar_software_rbuild',
    'access arguments' => array('access content'),
  );
  
  return $items;
}



/**
 *  hook_strongarm().
 */
function scholar_software_strongarm() {

 
  $conf['node_options_software'] = array('status', 'revision');
  $conf['upload_software'] = TRUE;
 
  $conf["show_preview_changes_software"] = TRUE;
  $conf["show_diff_inline_software"] = TRUE;
  
  // Comments
  $conf['comment_software'] = COMMENT_NODE_DISABLED;
 
  // FeedAPI
  $conf['feedapi_settings_software'] = array('enabled' => FALSE);
 
  // Pathauto (optional) settings
  $conf["pathauto_node_software_pattern"] = "[space-og-path]/software/[title-raw]";
 
  return $conf;
}

/**
 * Implementation of hook_nodeapi().
 */
/*
function scholar_software_nodeapi(&$node, $op, $teaser, $page){
  if ($node->type == 'software') {
    switch ($op) {
      case 'view' :
        dpm($node);
        module_load_include('inc', 'scholar_software', '/scholar_software.dcf.parse');
            if ($pkg_name = $node->field_software_r_package_name[0]['value']) {
          $packages = scholar_software_rbuild_load_packages();
          
          $pkg = $packages[$pkg_name];
          dpm($pkg);
          $node->title = 
          $node->body = $pkg['Description'];
        
        }
                         
        $output = $pkg['Title'];
        $output = scholar_software_rbuild_theme_package($pkg);
        //$weight = content_extra_field_weight($node->type, 'links');
        
        $node->content['rbuild'] = array(
          '#weight' => 100, 
          '#value' => $output 
        );
        
        break;
      case 'presave' :
        
        module_load_include('inc', 'scholar_software', '/scholar_software.dcf.parse');
        
        if ($pkg_name = $node->field_software_r_package_name[0]['value']) {
          $packages = scholar_software_rbuild_load_packages();
          
          $pkg = $packages[$pkg_name];
          
          $node->title = $pkg['Title'];
          //$node->body = $pkg['Description'];
        
        }
            break;
    }

  }

}

*/
/**
 * Implementation of hook_context_links_alter().
 */
function scholar_software_context_links_alter(&$links) {
  if (!empty($links['software'])) {
    $links['software']['query'] = drupal_get_destination();
  }
}


/**
 * Edit cv form to add checkbox for toggle
 */

/*
function scholar_software_form_alter(&$form, $form_state, $form_id){
  switch ($form_id) {
    case 'software_node_form' :
      drupal_add_js(drupal_get_path('module', 'scholar_biocv') . '/theme/scholar_biocv.biocvToggleUsePDF.js');
      $a_biocv_settings['biocvToggleUsePDF'] = array(
        'monitor' => "use_pdf_as_cv", 
        'toggleOff' => array(
          'title', 
          'body' 
        ) 
      );
      drupal_add_js($a_biocv_settings, 'setting');
      $form['title']['#required'] = false;
      
    $vsite = vsite_get_vsite();


    ctools_include('dependent');
    ctools_include('form');
      
      
      $vsite = vsite_get_vsite();
      $form['iqss_hmdc_rbuild']['use_pdf_as_cv'] = array(
        '#type' => 'checkbox', 
        '#weight' => - 10, 
        '#title' => t('Use IQSS/HMDC rbuild'), 
        //'#default_value' => (array_key_exists('scholar_biocv', $vsite->settings) && array_key_exists('use_pdf_as_cv', $vsite->settings['scholar_biocv']) && $vsite->settings['scholar_biocv']['use_pdf_as_cv']), 
        '#description' => t('When this is checked the content will be automatically loaded for you') 
      );
        
      //$form['#submit'][] = 'scholar_biocv_cv_node_submit';
      break;
  }
}
*/
