<?php


function iqss_book_utils_settings(){
//define node ids (Testing purposes only)
  return array(
  'old_bid' => 344,
  'new_bid' => 351,
  'exclude_nids' => array(348),  
  );
  
  //settings for thedata project site
/*   return array(
  'old_bid' => 401, //old top level book id
  'new_bid' => 704,  //new top level book id
  'exclude_nids' => array(587, 506, 508, 591, 594, 507, 604, 569),  //parts of old book tree to skip
  );*/
  
}

function iqss_book_utils_run(){
  $settings = iqss_book_utils_settings();
  $exclude = iqss_book_utils_exclude($settings['exclude_nids']);
  $new_bm = iqss_book_utils_getmlid($settings['new_bid']);
  $old_bm = iqss_book_utils_getmlid($settings['old_bid']);
 // dpm($exclude);
  $toc = iqss_book_utils_booktoc($settings['old_bid'], $exclude);
  foreach($toc as $data){
    if ($data['level'] > 0){
      //update book and menu_links tables
      iqss_book_utils_update_book($data);
      iqss_book_utils_update_menu_links($data,$new_bm, $old_bm);
    }
  }
  //clear menu cache and done
  cache_clear_all('*', 'cache_menu', TRUE);
}

function iqss_book_utils_booktoc($bid, $exclude = array(), $depth_limit = 9){  
  $tree = menu_tree_all_data(book_menu_name($bid));
  $toc = array();
  iqss_book_utils_toc_recurse($tree, '', $toc, $exclude, $depth_limit);

  return $toc;
 }
 
 
 /**
 * A recursive helper function for book_toc().
 */
function iqss_book_utils_toc_recurse($tree, $indent, &$toc, $exclude, $depth_limit = 9) {
  foreach ($tree as $data) {
    if ($data['link']['depth'] > $depth_limit) {
      // Don't iterate through any links on this level.
      break;
    }
    if (!in_array($data['link']['mlid'], $exclude)) { 
      $exploded_link_path = explode('/', $data['link']['link_path']);
      $level = strlen($indent);
      //return dpm($data);
      $toc[] = array(
      'nid' => $exploded_link_path[1],
      'bid' => iqss_book_utils_getbid($data['link']['mlid']),
      'mlid' => $data['link']['mlid'],
      'plid' => $data['link']['plid'],
      'title' => $data['link']['title'],
      'level' => $level / 2,     
      );
      
      if ($data['below']) {
        iqss_book_utils_toc_recurse($data['below'], $indent .'--', $toc, $exclude, $depth_limit);
      }
    }
  }
}

function iqss_book_utils_update_menu_links($data = array(), $new_bm, $old_bm){

  //update menu links field
  // 1)  change all 'plid' values for level 1 nodes to NEW top level book mlid
  // 2) change 'p1' value to new top level book mlid for all book children
  // 3) change 'menu name' values to new top level book-toc (e.g., book-toc-344)

  $settings = iqss_book_utils_settings();
  //update menu_name column
  db_query("UPDATE {menu_links} SET menu_name = '%s' WHERE mlid = %d ", 'book-toc-' . $settings['new_bid'], $data['mlid']);
  //update p column(s)
  db_query("UPDATE {menu_links} SET p1 =%d WHERE  p1 =%d  AND mlid = %d",  $new_bm, $old_bm, $data['mlid']);

  if ($data['level'] == 1){
    //update plid values for level one nodes column(s) 
    db_query("UPDATE {menu_links} SET plid = %d WHERE mlid = %d ", $new_bm, $data['mlid']);
  }
}

function iqss_book_utils_update_book($data = array()){
 
$settings = iqss_book_utils_settings();

 $res = db_query("UPDATE {book} SET bid = %d WHERE bid = %d AND mlid = %d AND nid = %d", 
 $settings['new_bid'], $settings['old_bid'], $data['mlid'], $data['nid']);
}

function iqss_book_utils_exclude($exclude_nids = array()){
 $exclude_mlids = array(); 
 foreach($exclude_nids as $nid){
 $exclude_mlids[] = iqss_book_utils_getmlid($nid);   
 }
 return $exclude_mlids;
}

/**
 * Pass the nid, returns the mlid
 */
function iqss_book_utils_getmlid($nid = 0){
  return db_result(db_query("SELECT mlid FROM {menu_links} WHERE link_path = '%s' ", 'node/' . $nid));	
}

/**
 * Pass the mlid, returns the bid
 */
function iqss_book_utils_getbid($mlid = 0){
  return db_result(db_query("SELECT bid FROM {book} WHERE mlid = %d", $mlid));	
}
