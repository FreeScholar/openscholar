<?php

include_once('scholar_events.features.inc');

/**
 * Implementation of hook_strongarm().
 */
function scholar_events_strongarm() {
  $conf = array();

  // Set Sunday first day of the week for calendar
  $conf['date_first_day'] = '0';

  foreach (array('event') as $type) {
    // Comments
    $conf['comment_'. $type] = COMMENT_NODE_DISABLED;
    // Disable Diff button
    $conf['show_preview_changes_'. $type] = FALSE;
    $conf['show_diff_inline_'. $type] = FALSE;
    // Pathauto (optional) settings
    $conf["pathauto_node_{$type}_pattern"] = "[space-og-path]/{$type}/[title-raw]";

  }

  // Uploads only on events
  $conf['upload_event'] = TRUE;

  $conf['nodeformscols_field_placements_event_default'] = unserialize('a:15:{s:5:"title";a:4:{s:6:"region";s:4:"main";s:6:"weight";s:2:"-5";s:12:"has_required";b:1;s:5:"title";s:5:"Title";}s:10:"body_field";a:5:{s:6:"region";s:4:"main";s:6:"weight";s:5:"0.008";s:12:"has_required";b:0;s:5:"title";N;s:6:"hidden";i:0;}s:4:"menu";a:6:{s:6:"region";s:5:"right";s:6:"weight";s:1:"3";s:12:"has_required";b:0;s:5:"title";s:13:"Menu settings";s:9:"collapsed";i:1;s:6:"hidden";i:0;}s:20:"revision_information";a:3:{s:6:"region";s:5:"right";s:6:"weight";s:1:"4";s:6:"hidden";i:0;}s:16:"comment_settings";a:6:{s:6:"region";s:5:"right";s:6:"weight";s:1:"8";s:12:"has_required";b:0;s:5:"title";s:16:"Comment settings";s:9:"collapsed";i:1;s:6:"hidden";i:0;}s:4:"path";a:6:{s:6:"region";s:5:"right";s:6:"weight";s:1:"7";s:12:"has_required";b:0;s:5:"title";s:17:"URL path settings";s:9:"collapsed";i:1;s:6:"hidden";i:0;}s:7:"options";a:6:{s:6:"region";s:5:"right";s:6:"weight";s:1:"6";s:12:"has_required";b:0;s:5:"title";s:18:"Publishing options";s:9:"collapsed";i:1;s:6:"hidden";i:0;}s:6:"author";a:6:{s:6:"region";s:5:"right";s:6:"weight";s:1:"5";s:12:"has_required";b:0;s:5:"title";s:21:"Authoring information";s:9:"collapsed";i:1;s:6:"hidden";i:0;}s:7:"buttons";a:5:{s:6:"region";s:4:"main";s:6:"weight";s:3:"100";s:12:"has_required";b:0;s:5:"title";N;s:6:"hidden";i:0;}s:4:"book";a:6:{s:6:"region";s:5:"right";s:6:"weight";s:1:"2";s:12:"has_required";b:0;s:5:"title";s:12:"Book outline";s:9:"collapsed";i:1;s:6:"hidden";i:0;}s:8:"taxonomy";a:5:{s:6:"region";s:5:"right";s:6:"weight";s:1:"0";s:12:"has_required";b:0;s:5:"title";N;s:6:"hidden";i:0;}s:11:"attachments";a:5:{s:6:"region";s:4:"main";s:6:"weight";s:2:"30";s:12:"has_required";b:0;s:5:"title";s:26:"Attach files to this event";s:6:"hidden";i:0;}s:10:"field_date";a:4:{s:6:"region";s:4:"main";s:6:"weight";s:2:"-4";s:12:"has_required";b:1;s:5:"title";s:4:"Date";}s:10:"og_nodeapi";a:6:{s:6:"region";s:4:"main";s:6:"weight";s:1:"0";s:12:"has_required";b:0;s:5:"title";s:9:"Web Sites";s:9:"collapsed";i:0;s:6:"hidden";i:0;}s:6:"signup";a:6:{s:6:"region";s:5:"right";s:6:"weight";s:1:"1";s:12:"has_required";b:0;s:5:"title";s:15:"Signup settings";s:9:"collapsed";i:1;s:6:"hidden";i:0;}}');
  

  return $conf;
}

/**
 * Implementation of hook_block().
 */
function scholar_events_block($op = 'list', $delta = 0, $edit = array()) {
  switch ($op) {
    case 'list':
      return array('mini' => array('info' => t('Mini Calendar - A small calendar used to display your sites upcoming events')));
    default:
      $function = "_scholar_events_block_{$delta}";
      if (function_exists($function)) {
        return $function($op, $edit);
      }
  }
}

/**
 * Implementation of hook_nodeapi().
 */
function scholar_events_nodeapi(&$node, $op, $teaser = NULL, $page = NULL) {
  switch ($op) {
    case 'view':
      // Confirm we are actually on a page of relevance
      if (menu_get_object() === $node && !empty($node->field_date)) {
        $from = date_convert($node->field_date[0]['value'], DATE_ISO, DATE_OBJECT);
        context_set('node', 'field_date', $from);
      }
      break;
  }
}

/**
 * Block: contextual mini calendar block
 */
function _scholar_events_block_mini($op, $edit) {
  if ($op == 'view') {
    $block = array();
    // if in a node view, get date from the cck field
    // otherwise now();
    $date = context_get('node', 'field_date');
    $date = $date ? $date : date_now();
    if ($date) {
      $year = date_format($date, 'Y');
      $month = date_format($date, 'm');
      $args = "$year-$month";
      $block['content'] = views_embed_view('scholar_events', 'block_1', $args);
    }
    return $block;
  }
}


/**
 * hook vsite_widgets
 */
function scholar_events_vsite_widgets(){
  $items = array();

  /**
   * this needs some work
   * because the block view expect a date argument
   * see _scholar_events_block_mini() above
   **/
  $items['scholar_events_mini'] = array(
      'module' => 'scholar_events',
      'delta' => 'mini',
      'weight' => 20,
      'region' => false,
      'status' => '0',
      'label' => 'Mini calendar',
      'type' => 'context_ui',
      );



  $items['views_scholar_events_upcoming-block_1'] = array(
      'module' => 'views',
      'delta' => 'scholar_events_upcoming-block_1',
      'weight' => 21,
      'region' => false,
      'status' => '0',
      'label' => 'Upcoming events',
      'type' => 'context_ui',
      );
  return $items;
}

